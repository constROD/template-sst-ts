name: Deploy

on:
  push:
    branches:
      - staging
      - main

jobs:
  deploy-to-staging:
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest
    env:
      STAGE: staging
      AWS_ACCESS_KEY_ID: ${{ secrets.STAGING_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.STAGING_AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.STAGING_AWS_REGION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: 7

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.13.2
          cache: 'pnpm'

      - name: Install Packages
        run: pnpm install --frozen-lockfile

      - name: SST Deploy to Staging
        run: npx sst deploy --stage=${{ env.STAGE }}

  deploy-to-production:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      STAGE: prod
      AWS_ACCESS_KEY_ID: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.PROD_AWS_REGION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: 7

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.13.2
          cache: 'pnpm'

      - name: Install Packages
        run: pnpm install --frozen-lockfile

      - name: SST Deploy to Production
        run: npx sst deploy --stage=${{ env.STAGE }}
